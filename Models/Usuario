<?php

class Usuario extends Model {

        //Usada para add usuario na plataforma. 
        public function setCadastroAluno($nome, $faculdade, $cargo, $matricula, $senha) {

            $senha = $matricula;
            
            $sql = $this->db->prepare("
            INSERT INTO usuario 
            SET nome = :nome,
            faculdade = :faculdade,
            cargo = :cargo,
            matricula = :matricula,
            senha = :matricula");

            $sql->bindValue(":nome", $nome);
            $sql->bindValue(":faculdade", $faculdade);
            $sql->bindValue(":cargo", $cargo);
            $sql->bindValue(":matricula", $matricula);
            $sql->bindValue(":senha", $senha);
            $sql->execute();
        }  
        
        public function setCadastro($nome, $cargo, $senha) {
            
            $sql = $this->db->prepare("
            INSERT INTO usuario 
            SET nome = :nome,
            faculdade = :faculdade,
            cargo = :cargo,
            senha = :senha");

            $sql->bindValue(":nome", $nome);
            $sql->bindValue(":cargo", $cargo);
            $sql->bindValue(":senha", $senha);
            $sql->execute();
        } 
        
          // Usada quando o usuario logar na plataforma e for mudar sua senha.(Redefinição de senha apos login) ou para redefinir sua senha quando quiser. 
        public function trocarSenhaAluno($matriculaDigitada, $senhaAtual, $novaSenha) {
            $sql = $this->db->prepare("SELECT id FROM usuario WHERE matricula = :$matriculaDigitada");
            $sql->bindValue(":matriculaDigitada", $matriculaDigitada);
            $sql->execute();
        
            if ($sql->rowCount() > 0) {

                $usuario = $sql->fetch(PDO::FETCH_ASSOC);
        
                if (password_verify($senhaAtual, $usuario['senha'])) {
                    $novaSenhaCriptografada = password_hash($novaSenha, PASSWORD_DEFAULT);
                    $sql = $this->db->prepare("UPDATE usuario SET senha = :novaSenha WHERE id =" . $usuario['id']);
                    $sql->bindValue(":novaSenha", $novaSenhaCriptografada);
                    $sql->execute();
        
                    return true; // Senha alterada com sucesso
                } else {
                    // Senha atual incorreta
                    return false;
                }
            } else {
                // Usuário não encontrado
                return false;
            }
        }

        // Usada quando o usuario logar na plataforma e for mudar sua senha.(Redefinição de senha apos login) ou para redefinir sua senha quando quiser. 
        public function trocarSenhaProfessor($emailDigitado, $senhaAtual, $novaSenha) {
            // Buscando o usuário nas três tabelas (orientador, coordenador, administrador)
            $sql = $this->db->prepare(
                "SELECT id, senha, 'orientador' AS tipo FROM orientador WHERE email = :emailProcurado
                UNION ALL
                SELECT id, senha, 'coordenador' AS tipo FROM coordenador WHERE email = :emailProcurado
                UNION ALL
                SELECT id, senha, 'administrador' AS tipo FROM administrador WHERE email = :emailProcurado"
            );
            
            $sql->bindValue(":emailProcurado", $emailDigitado);
            $sql->execute();
        
            if ($sql->rowCount() > 0) {
                $usuario = $sql->fetch(PDO::FETCH_ASSOC);
        
                // Verificando se a senha atual está correta
                if (password_verify($senhaAtual, $usuario['senha'])) {
                    // Criptografando a nova senha
                    $novaSenhaCriptografada = password_hash($novaSenha, PASSWORD_DEFAULT);
        
                    // Alterando a senha conforme a tabela encontrada
                    if ($usuario['tipo'] == 'Orientador') {
                        $sql = $this->db->prepare("UPDATE orientador SET senha = :novaSenha WHERE id = :id");
                    } elseif ($usuario['tipo'] == 'COORD') {
                        $sql = $this->db->prepare("UPDATE coordenador SET senha = :novaSenha WHERE id = :id");
                    } elseif ($usuario['tipo'] == 'ADM') {
                        $sql = $this->db->prepare("UPDATE administrador SET senha = :novaSenha WHERE id = :id");
                    }
        
                    $sql->bindValue(":novaSenha", $novaSenhaCriptografada);
                    $sql->bindValue(":id", $usuario['id']);
                    $sql->execute();
        
                    return true; // Senha alterada com sucesso
                } else {
                    // Senha atual incorreta
                    return false;
                }
            } else {
                // Usuário não encontrado
                return false;
            }
        }
        

        //Usada para verificar a matricula do usuario e sua senha.
        public function verificarLoginAluno($matriculaDigitada, $senha) {

            $sql = $this->db->prepare("SELECT id, matricula, senha FROM Orientando WHERE matricula = :matricula AND senha = :senha");
            $sql->bindValue(':matricula', $matriculaDigitada);
            $sql->bindValue(':senha', $senha);
            $sql->execute();
        
            if ($sql->rowCount() > 0) {
                return true; 
            }else {
                return false;
                }
        }

        //Usada para verificar o email do usuario e nova senha.
        public function verificarLoginProfessor($emailDigitado, $senha) {
            $sql = $this->db->prepare(
                "SELECT id, email, senha FROM 
                    (SELECT id, email, senha FROM orientador 
                    UNION ALL 
                    SELECT id, email, senha FROM coordenador
                    UNION ALL 
                    SELECT id, email, senha FROM administrador)
                WHERE email = :email AND senha = :senha");
            
            $sql->bindValue(':email', $emailDigitado);
            $sql->bindValue(':senha', $senha);
            $sql->execute();
            
            if ($sql->rowCount() > 0) {
                return true;
            } else {
                return false;
            }
        }
        

        




}
        